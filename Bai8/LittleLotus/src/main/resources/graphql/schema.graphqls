
type User {
    id: ID!
    fullname: String!
    email: String!
    phone: String
}

type Category {
    id: ID!
    name: String!
    images: String
}

type Product {
    id: ID!
    title: String!
    quantity: Int
    description: String
    price: Float!
    user: User
    category: Category
}

input UserInput {
    id: ID
    fullname: String!
    email: String!
    password: String!
    phone: String
}

input ProductInput {
    id: ID
    title: String!
    quantity: Int
    description: String
    price: Float!
    userId: ID!
    categoryId: ID!
}

input CategoryInput {
    id: ID
    name: String!
    images: String
}

# QUERY 
type Query {
    productsByPriceAsc: [Product!]!
    productsByCategory(categoryId: ID!): [Product!]!
    # Thêm các query còn thiếu nếu cần
    allProducts: [Product!]!
    productById(id: ID!): Product
    allCategories: [Category!]!
    categoryById(id: ID!): Category
    allUsers: [User!]!
    userById(id: ID!): User
}

# MUTATION 
type Mutation {
    createUser(input: UserInput!): User!
    updateUser(input: UserInput!): User!
    deleteUser(id: ID!): Boolean!
    
    createProduct(input: ProductInput!): Product!
    updateProduct(input: ProductInput!): Product!
    deleteProduct(id: ID!): Boolean!
    
    createCategory(input: CategoryInput!): Category!
    updateCategory(input: CategoryInput!): Category!
    deleteCategory(id: ID!): Boolean!
}