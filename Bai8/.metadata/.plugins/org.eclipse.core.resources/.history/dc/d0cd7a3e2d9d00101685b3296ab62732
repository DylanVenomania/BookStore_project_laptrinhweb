<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Little Lotus Bookstore - Products</title>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</head>
<body class="bg-light">

<div class="container my-5">
    <h1 class="text-center mb-4 text-secondary">Little Lotus Products <span style="font-size: 0.7em;">üå∏</span></h1>
    
    <div class="mb-4">
        <div class="dropdown">
            <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="categoryDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                L·ªçc theo Danh m·ª•c: <span id="current-category">T·∫•t C·∫£</span>
            </button>
            <ul class="dropdown-menu" aria-labelledby="categoryDropdown" id="category-list">
                <li><a class="dropdown-item category-filter" href="#" data-id="all">T·∫•t C·∫£ S·∫£n Ph·∫©m</a></li>
                <li><hr class="dropdown-divider"></li>
                </ul>
        </div>
    </div>
    <div class="row" id="product-list">
        </div>
</div>

<script>
    $(document).ready(function() {
        // H√†m ch√≠nh ƒë·ªÉ render s·∫£n ph·∫©m (kh√¥ng ƒë·ªïi)
        function renderProducts(products) {
            let htmlContent = '';
            
            if (!products || products.length === 0) {
                htmlContent = '<p class="text-center col-12">Ch∆∞a c√≥ s·∫£n ph·∫©m n√†o ƒë∆∞·ª£c t√¨m th·∫•y.</p>';
                $('#product-list').html(htmlContent);
                return;
            }
            
            products.forEach(product => {
                const title = product.title || "Kh√¥ng r√µ ti√™u ƒë·ªÅ";
                const quantity = product.quantity !== null && product.quantity !== undefined ? product.quantity : 0;
                const categoryName = (product.category && product.category.name) ? product.category.name : "Kh√¥ng r√µ danh m·ª•c";
                
                const priceValue = product.price || 0;
                const formattedPrice = Number(priceValue).toLocaleString('vi-VN');
                
                htmlContent += `
                    <div class="col-md-4 mb-4">
                        <div class="card shadow-sm h-100">
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title text-success">${title}</h5>
                                <p class="card-text">
                                    <strong>Gi√°:</strong> ${formattedPrice} VND
                                </p>
                                <p class="card-text">
                                    <strong>S·ªë l∆∞·ª£ng:</strong> ${quantity}
                                </p>
                                <p class="card-text mt-auto"><small class="text-muted">Danh m·ª•c: ${categoryName}</small></p>
                                <a href="#" class="btn btn-sm btn-outline-info mt-2">Xem chi ti·∫øt</a>
                            </div>
                        </div>
                    </div>
                `;
            });
            $('#product-list').html(htmlContent);
        }

        // --- H√ÄM 1: T·∫¢I S·∫¢N PH·∫®M ---
        function fetchProducts(categoryId = null, categoryName = 'T·∫•t C·∫£') {
            let query = '';
            
            if (categoryId === null || categoryId === 'all') {
                // Query m·∫∑c ƒë·ªãnh: L·∫•y t·∫•t c·∫£ s·∫£n ph·∫©m
                query = `
                    query {
                        productsByPriceAsc {
                            id
                            title
                            price
                            quantity
                            category { name }
                        }
                    }
                `;
            } else {
                // Query l·ªçc theo Category ID
                query = `
                    query {
                        productsByCategory(categoryId: ${categoryId}) {
                            id
                            title
                            price
                            quantity
                            category { name }
                        }
                    }
                `;
            }
            
            // C·∫≠p nh·∫≠t t√™n danh m·ª•c ƒëang l·ªçc
            $('#current-category').text(categoryName);
            $('#product-list').html('<p class="text-center col-12">ƒêang t·∫£i s·∫£n ph·∫©m...</p>');

            $.ajax({
                url: '/graphql', 
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ query: query }),
                success: function(response) {
                    let products = [];
                    if (categoryId === null || categoryId === 'all') {
                        products = response.data?.productsByPriceAsc || [];
                    } else {
                        products = response.data?.productsByCategory || [];
                    }
                    renderProducts(products);
                },
                error: function(xhr, status, error) {
                    console.error("GraphQL Request Failed: ", status, error, xhr.responseText);
                    $('#product-list').html('<p class="text-danger">L·ªói k·∫øt n·ªëi API ho·∫∑c truy v·∫•n l·ªçc kh√¥ng th√†nh c√¥ng.</p>');
                }
            });
        }
        
        // --- H√ÄM 2: T·∫¢I DANH M·ª§C (M·ªõi) ---
        function fetchCategories() {
            const graphqlQuery = {
                query: `
                    query {
                        allCategories {
                            id
                            name
                        }
                    }
                `
            };

            $.ajax({
                url: '/graphql', 
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(graphqlQuery),
                success: function(response) {
                    const categories = response.data?.allCategories || [];
                    const $categoryList = $('#category-list');
                    
                    if (categories.length > 0) {
                        categories.forEach(category => {
                            // Th√™m c√°c Category v√†o Dropdown
                            $categoryList.append(
                                `<li><a class="dropdown-item category-filter" href="#" data-id="${category.id}" data-name="${category.name}">${category.name}</a></li>`
                            );
                        });
                    }
                },
                error: function(xhr, status, error) {
                    console.error("Kh√¥ng th·ªÉ t·∫£i danh m·ª•c.");
                }
            });
        }
        
        // --- X·ª¨ L√ù S·ª∞ KI·ªÜN L·ªåC (M·ªõi) ---
        $(document).on('click', '.category-filter', function(e) {
            e.preventDefault();
            const categoryId = $(this).data('id');
            const categoryName = $(this).data('name') || 'T·∫•t C·∫£';
            
            fetchProducts(categoryId, categoryName);
        });

        // --- KH·ªûI T·∫†O ---
        // 1. T·∫£i danh m·ª•c tr∆∞·ªõc
        fetchCategories();
        // 2. T·∫£i s·∫£n ph·∫©m m·∫∑c ƒë·ªãnh (T·∫•t C·∫£)
        fetchProducts();
    });
</script>
</body>
</html>